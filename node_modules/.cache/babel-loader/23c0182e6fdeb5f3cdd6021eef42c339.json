{"ast":null,"code":"var _jsxFileName = \"/Users/ti-mariaacai/Documents/GitHub/sticky_todo/src/components/StickyNote/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './StickyNote.css';\nimport { refreshPage } from '../../hooks/refreshPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StickyNote = props => {\n  _s();\n\n  const forceUpdate = useForceUpdate();\n\n  const handleDone = () => {\n    const localSticky = JSON.parse(localStorage.getItem(props.stickyId));\n\n    if (localSticky.pending === true) {\n      localSticky.pending = false;\n    } else {\n      localSticky.pending = true;\n    }\n\n    localStorage.setItem(props.stickyId, JSON.stringify(localSticky));\n    refreshPage();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDoubleClick: () => handleDone(),\n    stickyId: props.id,\n    className: `sticky ${props.color}`,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StickyNote, \"sHgi24HeNFmIAUaNZ2Exq4PrzeE=\", true);\n\n_c = StickyNote;\nexport default StickyNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyNote\");","map":{"version":3,"sources":["/Users/ti-mariaacai/Documents/GitHub/sticky_todo/src/components/StickyNote/index.jsx"],"names":["React","refreshPage","StickyNote","props","forceUpdate","useForceUpdate","handleDone","localSticky","JSON","parse","localStorage","getItem","stickyId","pending","setItem","stringify","id","color","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,WAAT,QAA2B,yBAA3B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,WAAW,GAAGC,cAAc,EAAlC;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,KAAK,CAACS,QAA3B,CAAX,CAApB;;AACA,QAAGL,WAAW,CAACM,OAAZ,KAAwB,IAA3B,EAAgC;AAC5BN,MAAAA,WAAW,CAACM,OAAZ,GAAsB,KAAtB;AACH,KAFD,MAEK;AACDN,MAAAA,WAAW,CAACM,OAAZ,GAAsB,IAAtB;AACH;;AACDH,IAAAA,YAAY,CAACI,OAAb,CAAqBX,KAAK,CAACS,QAA3B,EAAqCJ,IAAI,CAACO,SAAL,CAAeR,WAAf,CAArC;AACAN,IAAAA,WAAW;AACd,GATD;;AAWA,sBACI;AAAK,IAAA,aAAa,EAAE,MAAMK,UAAU,EAApC;AAAwC,IAAA,QAAQ,EAAEH,KAAK,CAACa,EAAxD;AAA4D,IAAA,SAAS,EAAG,UAASb,KAAK,CAACc,KAAM,EAA7F;AAAA,cACKd,KAAK,CAACe;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnBD;;GAAMhB,U;;KAAAA,U;AAqBN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport './StickyNote.css';\nimport { refreshPage} from '../../hooks/refreshPage';\n\nconst StickyNote = (props) => {\n    const forceUpdate = useForceUpdate();\n\n    const handleDone = () => {\n        const localSticky = JSON.parse(localStorage.getItem(props.stickyId));\n        if(localSticky.pending === true){\n            localSticky.pending = false;\n        }else{\n            localSticky.pending = true;\n        }\n        localStorage.setItem(props.stickyId, JSON.stringify(localSticky));\n        refreshPage();\n    }\n\n    return (\n        <div onDoubleClick={() => handleDone()} stickyId={props.id} className={`sticky ${props.color}`}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default StickyNote;"]},"metadata":{},"sourceType":"module"}