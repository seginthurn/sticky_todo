{"ast":null,"code":"var _jsxFileName = \"/Users/ti-mariaacai/Documents/GitHub/sticky_todo/src/components/StickyForm/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getRandom(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nconst StickyForm = () => {\n  _s();\n\n  const [color, setColor] = useState(\"\");\n  const [task, setTask] = useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    createNewTask();\n  };\n\n  const createNewTask = () => {\n    let id = null;\n\n    for (let n = 0; n < localStorage.length; n++) {\n      let local = JSON.parse(localStorage.getItem(n));\n      let random = getRandom(1, 10000);\n\n      if (local) {\n        if (local != random) {\n          id = random;\n        }\n      }\n    }\n\n    console.log(id);\n    localStorage.setItem(id, JSON.stringify({\n      id: id,\n      task: task,\n      color: color,\n      pending: true\n    }));\n  };\n\n  const handleClean = () => {\n    localStorage.clear();\n  };\n\n  console.log(task);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Nova Tarefa\",\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"colors\",\n        id: \"colors\",\n        onChange: e => setColor(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"yellow\",\n          children: \"Amarelo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"green\",\n          children: \"Verde\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"red\",\n          children: \"Vermelho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"purple\",\n          children: \"Roxo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"orange\",\n          children: \"Laranja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClean(),\n      children: \"Limpar tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StickyForm, \"0r4hPxeoG9zs/DNfz/z7MzfIPSM=\");\n\n_c = StickyForm;\nexport default StickyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyForm\");","map":{"version":3,"sources":["/Users/ti-mariaacai/Documents/GitHub/sticky_todo/src/components/StickyForm/index.jsx"],"names":["React","useState","getRandom","min","max","Math","ceil","floor","random","StickyForm","color","setColor","task","setTask","handleSubmit","event","preventDefault","createNewTask","id","n","localStorage","length","local","JSON","parse","getItem","console","log","setItem","stringify","pending","handleClean","clear","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nfunction getRandom(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nconst StickyForm = () => {\n\n    const [color, setColor] = useState(\"\");\n    const [task, setTask] = useState(\"\");\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        createNewTask();\n\n    }\n\n    const createNewTask = () => {\n        let id = null;\n        \n        for(let n = 0; n < localStorage.length; n++){\n            let local = JSON.parse(localStorage.getItem(n));\n            let random = getRandom(1, 10000);\n\n            if(local){\n                if(local != random){\n                    id = random;\n                }\n            }\n\n        }\n\n        console.log(id)\n\n        localStorage.setItem(id, JSON.stringify({\n            id: id,\n            task: task,\n            color: color,\n            pending: true\n        }))\n    }\n\n    const handleClean = () => {\n        localStorage.clear()\n    }\n\n    console.log(task);\n\n    return (\n        <div>\n            <form onSubmit={e => handleSubmit(e)}>\n                <input placeholder=\"Nova Tarefa\" onChange={e => setTask(e.target.value)} />\n                <select name=\"colors\" id=\"colors\" onChange={e => setColor(e.target.value)}>\n                    <option value=\"yellow\">Amarelo</option>\n                    <option value=\"green\">Verde</option>\n                    <option value=\"red\">Vermelho</option>\n                    <option value=\"purple\">Roxo</option>\n                    <option value=\"orange\">Laranja</option>\n                </select>\n                <button>Cadastrar</button>\n            </form>\n\n            <button onClick={() => handleClean()}>Limpar tarefas</button>\n        </div>\n    );\n}\n\nexport default StickyForm;"]},"metadata":{},"sourceType":"module"}